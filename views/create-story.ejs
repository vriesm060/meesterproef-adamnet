<%- include('partials/head.ejs') %>
<body class="create-story">
	<div class="grid">
		<section class="map-visualisation">
			<div id="map"></div>
			<a class="back" href="/new-story">
				<svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
 				viewBox="0 0 492 492" style="enable-background:new 0 0 492 492;" xml:space="preserve">
					<g>
						<g>
							<path d="M464.3,207.4l0.8,0.2H135.9l103.5-103.7c5.1-5.1,7.8-11.9,7.8-19.1c0-7.2-2.8-14-7.8-19.1l-16.1-16.1
							c-5.1-5.1-11.8-7.9-19-7.9c-7.2,0-14,2.8-19,7.8L7.8,226.9C2.8,232,0,238.8,0,246c0,7.2,2.8,14,7.8,19.1l177.4,177.4
							c5.1,5.1,11.8,7.8,19,7.8c7.2,0,13.9-2.8,19-7.8l16.1-16.1c5.1-5.1,7.8-11.8,7.8-19c0-7.2-2.8-13.6-7.8-18.7L134.7,284.4h330
							c14.8,0,27.3-12.8,27.3-27.6V234C492,219.2,479.2,207.4,464.3,207.4z"/>
						</g>
					</g>
				</svg>
			</a>
		</section>

		<nav class="table-of-contents">
			<button class="open">
				<svg class="navicon" height="32px" id="Layer_1" style="enable-background:new 0 0 32 32;" version="1.1" viewBox="0 0 32 32" width="32px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
					<path d="M4,10h24c1.104,0,2-0.896,2-2s-0.896-2-2-2H4C2.896,6,2,6.896,2,8S2.896,10,4,10z M28,14H4c-1.104,0-2,0.896-2,2  s0.896,2,2,2h24c1.104,0,2-0.896,2-2S29.104,14,28,14z M28,22H4c-1.104,0-2,0.896-2,2s0.896,2,2,2h24c1.104,0,2-0.896,2-2  S29.104,22,28,22z"/>
				</svg>
			</button>
			<button class="close">
				<svg class="navicon" height="32px" id="Layer_1" style="enable-background:new 0 0 32 32;" version="1.1" viewBox="0 -5 32 32" width="32px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
					<path d="M14.1,11.3c-0.2-0.2-0.2-0.5,0-0.7l7.5-7.5c0.2-0.2,0.3-0.5,0.3-0.7s-0.1-0.5-0.3-0.7l-1.4-1.4C20,0.1,19.7,0,19.5,0  c-0.3,0-0.5,0.1-0.7,0.3l-7.5,7.5c-0.2,0.2-0.5,0.2-0.7,0L3.1,0.3C2.9,0.1,2.6,0,2.4,0S1.9,0.1,1.7,0.3L0.3,1.7C0.1,1.9,0,2.2,0,2.4  s0.1,0.5,0.3,0.7l7.5,7.5c0.2,0.2,0.2,0.5,0,0.7l-7.5,7.5C0.1,19,0,19.3,0,19.5s0.1,0.5,0.3,0.7l1.4,1.4c0.2,0.2,0.5,0.3,0.7,0.3  s0.5-0.1,0.7-0.3l7.5-7.5c0.2-0.2,0.5-0.2,0.7,0l7.5,7.5c0.2,0.2,0.5,0.3,0.7,0.3s0.5-0.1,0.7-0.3l1.4-1.4c0.2-0.2,0.3-0.5,0.3-0.7  s-0.1-0.5-0.3-0.7L14.1,11.3z"/>
				</svg>
			</button>
			<ol class="menu"><%
				for (var i = 0; i < Object.keys(dataFirstQuery).length; i++) { %>
					<li>
						<a href="#year-<%- Object.keys(dataFirstQuery)[i] %>">
							<h2 class="year-title"><%= Object.keys(dataFirstQuery)[i] %></h2>
						</a>
					</li><%
				} %>
			</ol>
		</nav>

		<main class="contents">
			<h1>Selecteer de foto's die je wilt gebruiken voor jouw herinneringenboek</h1>
			<form class="data" action="/my-story/<%- id %>" method="post"><%
				var allChapters = Object.values(selection);
				var arr = allChapters.map(function (chapter) {
					return [].concat.apply([], Object.values(chapter));
				});

				var merged = [].concat.apply([], arr);

				for (var i = 0; i < Object.keys(dataFirstQuery).length; i++) { %>
					<section id="year-<%- Object.keys(dataFirstQuery)[i] %>" class="year <%- Object.keys(dataFirstQuery)[i] %>">
						<img class="crosses" src="/images/crosses.svg">
						<ul><%
							var objectYearsSelection = dataFirstQuery[Object.keys(selection)[i]];

							if (objectYearsSelection !== null && objectYearsSelection !== undefined) {
								for (var j = 0; j < Object.keys(objectYearsSelection).length; j++) {
									var objectChaptersSelection = objectYearsSelection[Object.keys(objectYearsSelection)[j]];

									for (var k = 0; k < Object.keys(objectChaptersSelection).length; k++) { %>
										<li class="data-image">
											<label>
												<div class="content">
													<input id="checkbox" type="checkbox" name="images" value="<%- Object.values(objectChaptersSelection)[k].img.value %>" checked>
													<span class="check"></span>
													<img class="lazy" src="<%- Object.values(objectChaptersSelection)[k].img.value %>" alt="<%- Object.values(objectChaptersSelection)[k].title.value %>">
													<p>
														<%= Object.values(objectChaptersSelection)[k].title.value %>
													</p>
													<a class="openDetail" data-image="<%- Object.values(objectChaptersSelection)[k].img.value %>" data-text="<%- Object.values(objectChaptersSelection)[k].title.value %>" href="">
														<img src="/images/zoom-in.svg" alt="zoom-in icon">
													</a>
												</div>
											</label>
										</li><%
									}
								}
							} else {
								var objectYears = dataFirstQuery[Object.keys(dataFirstQuery)[i]];

								for (var j = 0; j < Object.keys(objectYears).length; j++) {
									var objectChapters = objectYears[Object.keys(objectYears)[j]];

									for (var k = 0; k < Object.keys(objectChapters).length; k++) { %>
										<li class="data-image">
											<label>
												<div class="content">
													<input id="checkbox" type="checkbox" name="images" value="<%- Object.values(objectChapters)[k].img.value %>">
													<span class="check"></span>
													<img class="lazy" src="<%- Object.values(objectChapters)[k].img.value %>" alt="<%- Object.values(objectChapters)[k].title.value %>">
													<p>
														<%= Object.values(objectChapters)[k].title.value %>
													</p>
													<a class="openDetail" data-image="<%- Object.values(objectChapters)[k].img.value %>" data-text="<%- Object.values(objectChapters)[k].title.value %>" href="">
														<img src="/images/zoom-in.svg" alt="zoom-in icon">
													</a>
												</div>
											</label>
										</li><%
									}
								}
							} %>
						</ul>
					</section><%
				}

				if (merged.length) { %>
					<section class="selected-images show-selected-images"><%
						merged.forEach(function (item) { %>
							<img src="<%- item.img.value %>" alt="<%- item.title.value %>"><%
						}); %>
					</section>
					<div class="next-page">
						<button class="submit-chapter show-selected-images" type="submit">Opslaan</button>
						<span class="count-images show-selected-images"><%= merged.length %></span>
					</div><%
				} else { %>
					<section class="selected-images"></section><%
				} %>

				<div class="next-page">
					<button class="submit-chapter action-btn" type="submit">Opslaan</button>
					<span class="count-images"></span>
				</div>
			</form>
		</main>
	</div>

	<script>
		// //open detail page image
		// var trigger = document.querySelectorAll('.openDetail');
		// var detailpopup = document.querySelectorAll('.detail');
		// var closeButton = document.querySelectorAll('.popupCloseButton');
		//
		// for(var i = 0; i < trigger.length; i++) {
		// 	trigger[i].addEventListener('click', function(e){
		// 		e.preventDefault();
		// 		e.path[3].childNodes[3].classList.add('show');
		// 	});
		//
		// 	detailpopup[i].addEventListener('click', function(e){
		// 		e.preventDefault();
		// 		e.target.parentElement.classList.remove('show')
		// 	});
		//
		// 	closeButton[i].addEventListener('click', function(e){
		// 		e.preventDefault();
		// 		e.target.parentElement.parentElement.classList.remove('show')
		// 	});
		// }
	</script>
	<script>
		//hamburger menu mobile
		if('querySelector' in document && 'querySelectorAll' in document && 'addEventListener' in window) {
			var open = document.querySelector('.open');
			var close = document.querySelector('.close');
			var menu = document.querySelector('nav ol');
			var items = document.querySelectorAll('nav ol li');

			menu.classList.add('first');

			open.addEventListener('click', function(){
				menu.classList.add('open-menu');
				menu.classList.remove('close-menu');

				open.style.display = "none";
				close.style.display = "block";
			})

			close.addEventListener('click', function(){
				menu.classList.remove('open-menu');
				menu.classList.add('close-menu');

				close.style.display = "none";
				open.style.display = "block";
			})

			items.forEach(function(el){
				el.addEventListener('click', function(){
					menu.classList.remove('open-menu');
					menu.classList.add('close-menu');

					close.style.display = "none";
					open.style.display = "block";
				})
			})
		}
	</script>
	<script>
		//active state year when scrolling
		var sections = document.querySelectorAll('section.year');
		var main = document.querySelector('body');
		var yearTitle = document.querySelectorAll('.year-title');

		window.addEventListener('scroll', function(){
			for (var i = 0; i < sections.length; i++) {
				if(sections[i].offsetTop <= window.scrollY && (sections[i].offsetTop + sections[i].offsetHeight) > window.scrollY+5) {
					yearTitle[i].classList.add('active-year');
				} else {
					yearTitle[i].classList.remove('active-year');
				}
			}
		});

		yearTitle.forEach(function(year){
			year.addEventListener('click', function(){
				console.log("click");
			});
		});
	</script>
	<script>
		var checkboxes = document.querySelectorAll('input[name="images"]');
		var selectedImages = document.querySelector('.selected-images');
		var submitButton = document.querySelector('.submit-chapter');
		var span = document.querySelector('.count-images');

		checkboxes.forEach(function(item) {
			item.addEventListener('change', function(){
				var li = item.parentElement.parentElement.parentElement;
				var ul = li.parentElement;

				if(item.checked == true) {
					//add number
					span.innerHTML++;

					//show selected-images-bar
					selectedImages.classList.add('show-selected-images');
					submitButton.classList.add('show-selected-images');
					span.classList.add('show-selected-images');

					//create item
					var url = item.value;
					var text = item.parentElement.childNodes[7].innerHTML;

					var img = document.createElement('img');
					img.src = url;
					img.alt = text;
					selectedImages.appendChild(img);

					var newImages = document.querySelectorAll('.selected-images img');
					newImages[newImages.length-1].scrollIntoView();

					//add style
					li.classList.add('hide-li');

					img.addEventListener('click', function(){
						//add number
						span.innerHTML--;

						//delete item
						var img = this;
						var section = this.parentElement;

						// label.style.opacity = '0';
						// setTimeout(function(){
							section.removeChild(img);
						// }, 1000);

						//add item
						var inputHidden = document.querySelector('input[value="' + this.src + '"]');
						var liHidden = inputHidden.parentElement.parentElement.parentElement;

						li.classList.remove('hide-li');
						inputHidden.checked = false;
					});

				} else {
					//add number
					span.innerHTML--;

					//show li item
					li.classList.remove('hide-li');

					//delete selected image
					var images = document.querySelectorAll('.selected-images img');
					for(var i = 0; i < images.length; i++) {
						if(item.value == images[i].src) {
							selectedImages.removeChild(images[i])
						}
					}

				}
			});
		});

		</script>
		<!-- <script>
			var inputSelected;
			var checkboxes = document.querySelectorAll('input[name="images"]');

			for(var i = 0; i < checkboxes.length; i++) {
				checkbox[i].addEventListener('change', function(){
					inputSelected = document.querySelectorAll('.selected-images input[name="images"]');
					console.log(inputSelected);

					for(var i = 0; i < inputSelected.length; i++) {
						var arrayNumber = inputSelected.length - i;
						// console.log(arrayNumber);

						inputSelected[i].addEventListener('change', function(){
							// console.log('check');
							// if(item.checked == false) {
							// 	//add number
							// 	console.log(item);
							// 	span.innerHTML--;
							// }
						});
					};
				})
			}


			checkboxes.forEach(function(item) {
				item.addEventListener('change', function(){
					inputSelected = document.querySelectorAll('.selected-images input[name="images"]');

					// inputSelected.forEach(function(item) {
					// 	item.addEventListener('change', function(){
					//
					// 		if(item.checked == false) {
					// 			//add number
					// 			console.log(item);
					// 			span.innerHTML--;
					// 		}
					// 	});
					// });
				});
			});

		</script> -->
		<script>
		//smoothscroll
		(function() // Code in a function to create an isolate scope
		{
		var speed = 500;
		var moving_frequency = 15; // Affects performance !
		var links = document.getElementsByTagName('a');
		var href;
		for(var i=0; i<links.length; i++)
		{
		    href = (links[i].attributes.href === undefined) ? null : links[i].attributes.href.nodeValue.toString();
		    if(href !== null && href.length > 1 && href.substr(0, 1) == '#')
		    {
		        links[i].onclick = function()
		        {
		            var element;
		            var href = this.attributes.href.nodeValue.toString();
		            if(element = document.getElementById(href.substr(1)))
		            {
		                var hop_count = speed/moving_frequency
		                var getScrollTopDocumentAtBegin = getScrollTopDocument();
		                var gap = (getScrollTopElement(element) - getScrollTopDocumentAtBegin) / hop_count;

		                for(var i = 1; i <= hop_count; i++)
		                {
		                    (function()
		                    {
		                        var hop_top_position = gap*i;
		                        setTimeout(function(){  window.scrollTo(0, hop_top_position + getScrollTopDocumentAtBegin); }, moving_frequency*i);
		                    })();
		                }
		            }

		            return false;
		        };
		    }
		}

		var getScrollTopElement =  function (e)
		{
		    var top = 0;

		    while (e.offsetParent != undefined && e.offsetParent != null)
		    {
		        top += e.offsetTop + (e.clientTop != null ? e.clientTop : 0);
		        e = e.offsetParent;
		    }

		    return top;
		};

		var getScrollTopDocument = function()
		{
		    return document.documentElement.scrollTop + document.body.scrollTop;
		};
		})();
	</script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/vanilla-lazyload/8.9.0/lazyload.min.js"></script>
	<script>
		var myLazyLoad = new LazyLoad({
			elements_selector: ".lazy"
		});
	</script>
	<script>
		//get height of table of contents
		var height = document.querySelector('.table-of-contents ol').offsetHeight;
		var bar = document.querySelector('.table-of-contents ol');
		bar.style.height = height + 100;
	</script>
<%- include('partials/foot.ejs') %>
